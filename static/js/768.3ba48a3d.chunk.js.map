{"version":3,"file":"static/js/768.3ba48a3d.chunk.js","mappings":"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","sources":["modules/SearchPageComponent/SearchTypeSelector/SearchTypeSelector.styled.js","modules/SearchPageComponent/SearchTypeSelector/SearchTypeSelector.jsx","modules/SearchPageComponent/SearchPageComponent.styled.js","modules/SearchPageComponent/SearchPageComponent.jsx","pages/SearchPage.jsx","shared/Utils/capitalizeInitialLetter.js","shared/components/SharedPageComponents/Button/SubmitFormButton.styled.js","shared/components/SharedPageComponents/Button/SubmitFormButton.jsx","shared/components/SharedPageComponents/NoInfoSupplied/NoInfoSupplied.styled.js","shared/components/SharedPageComponents/NoInfoSupplied/NoInfoSupplied.jsx","shared/components/SharedPageComponents/SearchForm/SearchForm.styled.js","shared/components/SharedPageComponents/SearchForm/SearchForm.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSearchTypeSelector = styled.div`\n  position: relative;\n  margin-top: 24px;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 28px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 90px;\n  }\n`;\n\nexport const SelectorContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 223px;\n\n  @media screen and (min-width: 768px) {\n    width: 265px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 310px;\n  }\n`;\n\nexport const CriteriaBox = styled.p`\n  color: #001833;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 678px) {\n    font-size: 14px;\n  }\n`;\n\nexport const SelectorBox = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 14px;\n  width: 146px;\n  background-color: var(--default-background-color);\n  border-radius: 6px;\n\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.24px;\n  color: rgba(0, 0, 0, 0.5);\n\n  @media screen and (min-width: 678px) {\n    width: 175px;\n    padding: 10px 14px;\n    font-size: 14px;\n    letter-spacing: -0.28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 198px;\n    padding: 14px 14px;\n  }\n\n  &:hover svg {\n    stroke: var(--primary-btn-color);\n    scale: 1.01;\n  }\n`;\n\nexport const Icon = styled.svg`\n  width: 14px;\n  height: 14px;\n  fill: none;\n  stroke: rgba(0, 0, 0, 0.5);\n  transition: all var(--transition-dur-func);\n\n  @media screen and (min-width: 678px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const SelectorList = styled.ul`\n  &.dropdown-enter {\n    transform: translateY(-100%);\n    z-index: -11;\n  }\n\n  &.dropdown-enter-active {\n    transform: translateY(0);\n    transition: all var(--transition-dur-func);\n  }\n  &.dropdown-exit {\n    transform: translateY(0);\n  }\n\n  &.dropdown-exit-active {\n    transform: translateY(-100%);\n    transition: all var(--transition-dur-func);\n  }\n\n  position: absolute;\n  width: 146px;\n  right: 0;\n  bottom: -62px;\n  z-index: 10;\n\n  padding-top: 8px;\n  padding-bottom: 10px;\n  background-color: var(--primary-font-color);\n  border-radius: 0px 0px 6px 6px;\n\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.24px;\n\n  @media screen and (min-width: 678px) {\n    bottom: -77px;\n    width: 175px;\n    padding-top: 10px;\n    padding-bottom: 14px;\n\n    font-size: 14px;\n    letter-spacing: -0.28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    bottom: -80px;\n    width: 198px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    font-size: 14px;\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const SelectorItem = styled.li`\n  padding-left: 14px;\n  color: rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n  transition: all var(--transition-dur-func);\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 10px;\n    }\n  }\n\n  &.active {\n    color: var(--primary-btn-color);\n  }\n\n  &.hovered {\n    background-color: var(--secondary-background-color);\n  }\n`;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { nanoid } from 'nanoid';\n\nimport {\n  CriteriaBox,\n  Icon,\n  SelectorContainer,\n  SelectorItem,\n  SelectorList,\n  SelectorBox,\n  StyledSearchTypeSelector,\n} from './SearchTypeSelector.styled';\nimport icons from '../../../shared/sprite.svg';\nimport { capitalizeInitialLetter } from 'shared/Utils/capitalizeInitialLetter';\n\nconst SearchTypeSelector = ({\n  selectorType,\n  handleSelectorType,\n  selectorTypesValues,\n}) => {\n  const [showSelector, setShowSelector] = useState(false);\n  const selectorRef = useRef();\n  const [hovered, setHovered] = useState(selectorType);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setShowSelector(false);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [setShowSelector]);\n\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (!selectorRef.current.contains(e.target)) {\n        setShowSelector(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [setShowSelector]);\n\n  const showSelectorToggler = () => {\n    setShowSelector(!showSelector);\n  };\n\n  const clickSelectorType = string => {\n    handleSelectorType(string);\n    setHovered(string);\n    setShowSelector(false);\n  };\n  return (\n    <StyledSearchTypeSelector ref={selectorRef}>\n      <SelectorContainer>\n        <CriteriaBox>Search by:</CriteriaBox>\n\n        <SelectorBox onClick={showSelectorToggler}>\n          <span>\n            {selectorType ? capitalizeInitialLetter(selectorType) : 'Title'}\n          </span>\n          <Icon>\n            <use href={icons + '#shevronUp'}></use>\n          </Icon>\n        </SelectorBox>\n      </SelectorContainer>\n      <CSSTransition\n        in={showSelector}\n        timeout={250}\n        classNames=\"dropdown\"\n        unmountOnExit\n      >\n        <>\n          {showSelector && (\n            <SelectorList>\n              {selectorTypesValues.map(value => {\n                const isHovered = value === hovered;\n\n                const isActive = value === selectorType;\n                return (\n                  <SelectorItem\n                    key={nanoid()}\n                    className={`${isHovered ? 'hovered' : ''} ${\n                      isActive ? 'active' : ''\n                    }`}\n                    onClick={() => clickSelectorType(value)}\n                    onMouseEnter={() => setHovered(value)}\n                    onMouseLeave={() => setHovered(null)}\n                  >\n                    {capitalizeInitialLetter(value)}\n                  </SelectorItem>\n                );\n              })}\n            </SelectorList>\n          )}\n        </>\n      </CSSTransition>\n    </StyledSearchTypeSelector>\n  );\n};\n\nexport default SearchTypeSelector;\n","import styled from 'styled-components';\n\nexport const SearchBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\n\nimport {\n  getRecipesByIngredientQuery,\n  getRecipesByTitleQuery,\n} from 'redux/reduxRecipes/recipesOperations';\nimport {\n  selectLoading,\n  selectRecipesByQuery,\n  selectTotalRecipesByQuery,\n} from 'redux/reduxRecipes/recipesSelectors';\nimport RecipesList from 'shared/components/SharedPageComponents/RecipesList/RecipesList';\nimport { StyledContainer } from 'shared/components/Container/Container.styled';\nimport PageBackground from 'shared/components/SharedLayoutLoggedIn/PageBackground/PageBackground';\nimport SearchForm from 'shared/components/SharedPageComponents/SearchForm/SearchForm';\nimport Title from 'shared/components/SharedPageComponents/Title/Title';\nimport SearchTypeSelector from './SearchTypeSelector/SearchTypeSelector';\nimport BasicPagination from 'shared/components/SharedPageComponents/Pagination/Pagination';\nimport { scrollToTop } from 'shared/Utils/scrollToTop';\nimport { SearchBar } from './SearchPageComponent.styled';\nimport NoInfoSupplied from 'shared/components/SharedPageComponents/NoInfoSupplied/NoInfoSupplied';\nimport Loader from 'shared/components/Loader/Loader';\n\nconst SearchPageComponent = () => {\n  const selectorTypesValues = ['title', 'ingredients'];\n  const recipesByQuery = useSelector(selectRecipesByQuery);\n  const totalByQuery = useSelector(selectTotalRecipesByQuery);\n  const isLoading = useSelector(selectLoading);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const type = searchParams.get('type') ?? 'title';\n\n  const [page, setPage] = useState(1);\n  const [selectorType, setSelectorType] = useState('title');\n  const [recipesList, setRecipesList] = useState([]);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const limit = windowWidth >= 1440 ? 12 : 6;\n  const totalPages = Math.ceil(totalByQuery / limit);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [windowWidth]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setSelectorType(type);\n  }, [type]);\n\n  useEffect(() => {\n    if (query) {\n      if (selectorType === 'title') {\n        dispatch(getRecipesByTitleQuery({ query, page, limit }));\n      } else if (selectorType === 'ingredients') {\n        dispatch(getRecipesByIngredientQuery({ query, page, limit }));\n      }\n    }\n  }, [query, page, limit, selectorType, dispatch]);\n\n  useEffect(() => {\n    if (selectorType && query) {\n      setRecipesList(recipesByQuery);\n    }\n  }, [recipesByQuery, selectorType, query]);\n\n  const handleSubmit = value => {\n    searchParams.set('query', value);\n    setSearchParams(searchParams);\n    setPage(1);\n  };\n\n  const handleSelectorType = label => {\n    setSelectorType(label);\n\n    searchParams.set('type', label);\n    if (query) {\n      searchParams.set('query', query);\n    } else {\n      searchParams.delete('query');\n    }\n\n    setSearchParams(searchParams);\n    setPage(1);\n  };\n\n  const handlePageChange = value => {\n    setPage(value);\n    scrollToTop();\n  };\n\n  return (\n    <PageBackground page={true}>\n      {isLoading && <Loader />}\n\n      <StyledContainer>\n        <Title title=\"Search\" />\n        <SearchBar>\n          <SearchForm searchQuery={query} handleSubmit={handleSubmit} />\n\n          <SearchTypeSelector\n            selectorType={selectorType}\n            selectorTypesValues={selectorTypesValues}\n            handleSelectorType={handleSelectorType}\n          />\n          {!isLoading && <RecipesList recipesList={recipesList} />}\n          {!recipesList.length && (\n            <NoInfoSupplied\n              text={\n                !query\n                  ? 'Enter a query, please'\n                  : 'Oops, there are no recipes matching your query...'\n              }\n            />\n          )}\n        </SearchBar>\n\n        {totalPages > 1 && query && (\n          <BasicPagination\n            page={page}\n            totalPages={totalPages}\n            onChange={handlePageChange}\n          />\n        )}\n      </StyledContainer>\n    </PageBackground>\n  );\n};\n\nexport default SearchPageComponent;\n","import SearchPageComponent from 'modules/SearchPageComponent/SearchPageComponent';\n\nconst SearchPage = () => {\n  return (\n    <div>\n      <SearchPageComponent />\n    </div>\n  );\n};\n\nexport default SearchPage;\n","export const capitalizeInitialLetter = string => {\n  const newString = string.toLowerCase();\n\n  let wordsArr = newString.split(' ');\n  wordsArr[0] = wordsArr[0].charAt(0).toUpperCase() + wordsArr[0].slice(1);\n  let capitalizedString = wordsArr.join(' ');\n  return capitalizedString;\n};\n","import styled, { css } from 'styled-components';\n\nexport const StyledSearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: var(--secondary-btn-color);\n  border: none;\n  border-radius: 24px 44px;\n\n  font-weight: 400;\n  line-height: 1.5;\n  color: var(--primary-font-color);\n\n  transition: all var(--transition-dur-func);\n\n  ${props =>\n    props.searchForm &&\n    css`\n      position: absolute;\n      top: 0;\n      right: -2px;\n      height: 52px;\n      padding: 16px 32px;\n      font-size: 14px;\n\n      @media screen and (min-width: 768px) {\n        padding: 18px 45px;\n        height: 59px;\n        font-size: 16px;\n      }\n\n      @media screen and (min-width: 1440px) {\n        padding: 23px 55px;\n        height: 71px;\n      }\n    `}\n\n  ${props =>\n    props.addForm &&\n    css`\n      padding: 12px 48px;\n      height: 46px;\n      font-size: 16px;\n\n      @media screen and (min-width: 1440px) {\n        padding: 14px 64px;\n        height: 52px;\n      }\n    `}\n\n  \n\n  &:hover {\n    background-color: var(--primary-btn-color);\n  }\n`;\n","import { StyledSearchBtn } from './SubmitFormButton.styled';\n\nconst SubmitFormButton = ({ type, text, addForm, searchForm, disabled }) => {\n  return (\n    <StyledSearchBtn\n      type={type}\n      addForm={addForm}\n      searchForm={searchForm}\n      disabled={disabled}\n    >\n      {text}\n    </StyledSearchBtn>\n  );\n};\n\nexport default SubmitFormButton;\n","import styled from 'styled-components';\n\nexport const StyledNoInfoSupplied = styled.picture`\n  margin-left: auto;\n  margin-right: auto;\n  display: block;\n  height: 133px;\n  width: 208px;\n\n  @media screen and (min-width: 767px) {\n    height: 255px;\n    width: 350px;\n  }\n`;\n\nexport const StyledText = styled.p`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 24px;\n  width: 208px;\n\n  text-align: center;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: rgba(0, 0, 0, 0.5);\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n    width: 350px;\n    font-size: 24px;\n  }\n`;\n","import img1 from '../../../images/noInfoSupplied/noInfoSuppliedMobile.png';\nimport img2 from '../../../images/noInfoSupplied/noInfoSuppliedMobile@2x.png';\nimport img3 from '../../../images/noInfoSupplied/noInfoSuppliedTab.png';\nimport img4 from '../../../images/noInfoSupplied/noInfoSuppliedTab@2x.png';\nimport img5 from '../../../images/noInfoSupplied/noInfoSuppliedDesktop.png';\nimport img6 from '../../../images/noInfoSupplied/noInfoSuppliedDesktop@2x.png';\nimport { StyledNoInfoSupplied, StyledText } from './NoInfoSupplied.styled';\n\nconst NoInfoSupplied = ({ text }) => {\n  return (\n    <div>\n      <StyledNoInfoSupplied>\n        <source\n          srcSet={`\n                    ${img5} 1x,\n                    ${img6} 2x\n                  `}\n          media=\"(min-width: 1440px)\"\n        />\n        <source\n          srcSet={`\n                    ${img3} 1x,\n                    ${img4} 2x\n                  `}\n          media=\"(min-width: 768px)\"\n        />\n        <source\n          srcSet={`\n                    ${img1} 1x,\n                    ${img2} 2x\n                  `}\n          media=\"(max-width: 767px)\"\n        />\n\n        <img src={`${img1}`} alt=\"plate with vegetables\" />\n      </StyledNoInfoSupplied>\n      <StyledText>{text}</StyledText>\n    </div>\n  );\n};\n\nexport default NoInfoSupplied;\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled, { css } from 'styled-components';\n\nexport const StyledSearchForm = styled(Form)`\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 295px;\n  }\n\n  @media screen and (min-width: 375px) and (max-width: 767px) {\n    width: 295px;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 369px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 510px;\n  }\n`;\n\nexport const StyledFieldBox = styled.div`\n  position: relative;\n\n  height: 52px;\n  display: flex;\n\n  @media screen and (min-width: 768px) {\n    height: 59px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    height: 71px;\n  }\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding-top: 17px;\n  padding-bottom: 17px;\n  padding-left: 32px;\n  padding-right: 113px;\n  outline: none;\n  border-radius: 24px 44px;\n  border: 1px solid;\n  box-shadow: 0px 4px 97px rgba(34, 37, 42, 0.03);\n  transition: all var(--transition-dur-func);\n\n  ${props =>\n    props.neutral &&\n    css`\n      border-color: #f0f0f0;\n\n      &:hover,\n      &:focus {\n        border-color: rgba(0, 0, 0, 0.2);\n      }\n    `};\n\n  ${props =>\n    props.error &&\n    css`\n      border-color: var(--error-color);\n    `};\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: var(--secondary-font-color);\n\n  @media screen and (min-width: 768px) {\n    padding-top: 18px;\n    padding-bottom: 18px;\n    padding-left: 38px;\n    padding-right: 161px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 23px;\n    padding-bottom: 23px;\n    padding-left: 48px;\n  }\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.5;\n    color: rgba(189, 189, 189, 1);\n\n    @media screen and (min-width: 768px) {\n      font-size: 16px;\n    }\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  margin-top: 7px;\n  padding-left: 40px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 10px;\n    font-size: 14px;\n  }\n  color: var(--error-color);\n`;\n","import { Formik } from 'formik';\nimport { useEffect, useState } from 'react';\n\nimport { validationSchema } from 'shared/Variables/validationSchema';\nimport {\n  StyledSearchForm,\n  StyledFieldBox,\n  StyledField,\n  StyledErrorMessage,\n} from './SearchForm.styled';\nimport SubmitFormButton from '../Button/SubmitFormButton';\n\nconst SearchForm = ({ searchQuery, handleSubmit }) => {\n  const [newSearchQuery, setNewSearchQuery] = useState(searchQuery);\n\n  useEffect(() => {\n    if (searchQuery) {\n      setNewSearchQuery(searchQuery);\n    } else {\n      setNewSearchQuery('');\n    }\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{ query: newSearchQuery || '' }}\n        validationSchema={validationSchema.search}\n        onSubmit={(\n          values,\n\n          { setSubmitting }\n        ) => {\n          handleSubmit(values.query);\n          setSubmitting(false);\n        }}\n      >\n        {({\n          isSubmitting,\n          setFieldTouched,\n          touched,\n          errors,\n          setFieldValue,\n        }) => {\n          const error = errors.query && touched.query ? 1 : 0;\n          const neutral = !touched.query ? 1 : 0;\n\n          const handleInputFocus = () => {\n            setFieldTouched('query', false);\n          };\n\n          const handleInputBlur = e => {\n            setFieldTouched('query', false);\n            setFieldValue('query', e.target.value.trim());\n          };\n\n          return (\n            <StyledSearchForm>\n              <StyledFieldBox>\n                <StyledField\n                  type=\"text\"\n                  name=\"query\"\n                  placeholder=\"Beef\"\n                  autoComplete=\"off\"\n                  neutral={neutral}\n                  error={error}\n                  onFocus={handleInputFocus}\n                  onBlur={handleInputBlur}\n                />\n                <SubmitFormButton\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  text=\"Search\"\n                  searchForm={true}\n                />\n              </StyledFieldBox>\n\n              <StyledErrorMessage name=\"query\" component=\"p\" />\n            </StyledSearchForm>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["StyledSearchTypeSelector","styled","SelectorContainer","CriteriaBox","SelectorBox","Icon","SelectorList","SelectorItem","selectorType","handleSelectorType","selectorTypesValues","useState","showSelector","setShowSelector","selectorRef","useRef","hovered","setHovered","useEffect","handleKeyDown","e","code","document","addEventListener","removeEventListener","handleClickOutside","current","contains","target","ref","onClick","capitalizeInitialLetter","href","icons","CSSTransition","in","timeout","classNames","unmountOnExit","map","value","isHovered","isActive","className","string","onMouseEnter","onMouseLeave","nanoid","SearchBar","recipesByQuery","useSelector","selectRecipesByQuery","totalByQuery","selectTotalRecipesByQuery","isLoading","selectLoading","useSearchParams","searchParams","setSearchParams","query","get","type","page","setPage","setSelectorType","recipesList","setRecipesList","window","innerWidth","windowWidth","setWindowWidth","limit","totalPages","Math","ceil","handleResize","dispatch","useDispatch","getRecipesByTitleQuery","getRecipesByIngredientQuery","PageBackground","Loader","Title","title","SearchForm","searchQuery","handleSubmit","set","label","delete","RecipesList","length","NoInfoSupplied","text","onChange","scrollToTop","wordsArr","toLowerCase","split","charAt","toUpperCase","slice","join","StyledSearchBtn","props","searchForm","css","addForm","disabled","StyledNoInfoSupplied","StyledText","srcSet","img5","img6","media","img3","img4","img1","img2","src","alt","StyledSearchForm","Form","StyledFieldBox","StyledField","Field","neutral","error","StyledErrorMessage","ErrorMessage","newSearchQuery","setNewSearchQuery","initialValues","validationSchema","onSubmit","values","setSubmitting","isSubmitting","setFieldTouched","touched","errors","setFieldValue","name","placeholder","autoComplete","onFocus","onBlur","trim","SubmitFormButton","component","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString"],"sourceRoot":""}