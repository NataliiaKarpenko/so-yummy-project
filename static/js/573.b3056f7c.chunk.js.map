{"version":3,"file":"static/js/573.b3056f7c.chunk.js","mappings":"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","sources":["shared/components/Auth/AuthFormVisibilityButton/AuthFormVisibilityButton.styled.js","shared/components/Auth/AuthFormVisibilityButton/AuthFormVisibilityButton.jsx","shared/components/Auth/AuthInputs/PasswordInput.jsx","shared/components/Auth/AuthNav/AuthNav.styled.js","shared/components/Auth/AuthNav/AuthNav.jsx","shared/components/Auth/AuthStyles/AuthForm.styled.js","shared/components/Auth/AuthStyles/AuthPageComponent.styled.js","shared/components/Auth/SubmitButton/SubmitButton.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledAuthFormVisibilityBtnContainer = styled.div`\n  margin-top: 7px;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: -0.02em;\n  color: rgba(250, 250, 250, 0.8);\n\n  @media screen and (min-width: 768px) {\n    margin-top: 10px;\n    font-size: 14px;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  background-color: transparent;\n  border: none;\n  fill: rgba(250, 250, 250, 0.8);\n\n  transition: all var(--transition-dur-func);\n\n  &:hover {\n    scale: 1.01;\n    fill: var(--form-hover-state-color);\n  }\n`;\n","import icons from '../../../sprite.svg';\nimport {\n  StyledAuthFormVisibilityBtnContainer,\n  StyledButton,\n} from './AuthFormVisibilityButton.styled';\n\nconst AuthFormVisibilityButton = ({ passwordType, togglePassword }) => {\n  return (\n    <StyledAuthFormVisibilityBtnContainer>\n      <StyledButton type=\"button\" onClick={togglePassword}>\n        {passwordType === 'password' ? (\n          <svg width=\"15\" height=\"15\" aria-label=\"eye\">\n            <use href={icons + '#eye'}></use>\n          </svg>\n        ) : (\n          <svg width=\"15\" height=\"15\" aria-label=\"blocked eye\">\n            <use href={icons + '#eyeBlocked'}></use>\n          </svg>\n        )}\n      </StyledButton>\n      <p>Show password</p>\n    </StyledAuthFormVisibilityBtnContainer>\n  );\n};\n\nexport default AuthFormVisibilityButton;\n","import { useState } from 'react';\n\nimport {\n  StyledInputBox,\n  StyledField,\n  StyledInputIcon,\n  StyledInfoIcon,\n  StyledMessage,\n} from './AuthFormInputs.styled';\nimport icons from '../../../../shared/sprite.svg';\nimport AuthFormVisibilityButton from 'shared/components/Auth/AuthFormVisibilityButton/AuthFormVisibilityButton';\n\nconst PasswordInput = ({\n  errors,\n  className,\n  touched,\n  onChange,\n  onFocus,\n  onBlur,\n}) => {\n  const [message, setMessage] = useState('');\n  const [hovered, setHovered] = useState(false);\n  const [passwordType, setPasswordType] = useState('password');\n\n  const error = errors.password && touched.password ? true : false;\n  const warning = message ? true : false;\n  const success =\n    !errors.password && touched.password && !warning ? true : false;\n  const neutral = !error && !warning && !success ? true : false;\n\n  const placeholderText = hovered\n    ? '\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF\\u25CF'\n    : 'Password';\n\n  const togglePasswordPlaceholder = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  const handleInfoIcon = () => {\n    if (error) {\n      return (\n        <StyledInfoIcon aria-label=\"error\" status=\"error\">\n          <use href={icons + '#errorLogo'}></use>\n        </StyledInfoIcon>\n      );\n    } else if (warning) {\n      return (\n        <StyledInfoIcon aria-label=\"exclamation mark\" status=\"warning\">\n          <use href={icons + '#exclamationLogo'}></use>\n        </StyledInfoIcon>\n      );\n    } else if (success) {\n      return (\n        <StyledInfoIcon aria-label=\"tick\" status=\"success\">\n          <use href={icons + '#tickLogo'}></use>\n        </StyledInfoIcon>\n      );\n    }\n    return;\n  };\n\n  const handleInfoMessage = () => {\n    if (neutral) {\n      return (\n        <StyledMessage status=\"neutral\">\n          Password must be at least 6 characters long. Can contain letters and\n          digits\n        </StyledMessage>\n      );\n    } else if (warning) {\n      return <StyledMessage status=\"warning\">{message}</StyledMessage>;\n    } else if (success) {\n      return <StyledMessage status=\"success\">Password is secure</StyledMessage>;\n    } else if (error) {\n      return <StyledMessage status=\"error\">{errors.password}</StyledMessage>;\n    }\n    return;\n  };\n\n  const handlePasswordChange = event => {\n    const passwordValue = event.target.value;\n    onChange(event);\n    const digitTest = /\\d/;\n    const letterTest = /[a-zA-Z]/;\n\n    if (!digitTest.test(passwordValue) && passwordValue.length >= 6) {\n      setMessage('Insecure password. Add at least one digit');\n    } else if (!letterTest.test(passwordValue) && passwordValue.length >= 6) {\n      setMessage('Insecure password. Add at least one letter');\n    } else {\n      setMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <StyledInputBox\n        neutral={neutral}\n        error={error}\n        warning={warning}\n        success={success}\n      >\n        <StyledInputIcon aria-label=\"lock\">\n          <use href={icons + '#lock'}></use>\n        </StyledInputIcon>\n\n        <StyledField\n          type={passwordType}\n          name=\"password\"\n          className={className}\n          placeholder={placeholderText}\n          autoComplete=\"off\"\n          onMouseEnter={() => setHovered(true)}\n          onMouseLeave={() => setHovered(false)}\n          onChange={handlePasswordChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n\n        {handleInfoIcon()}\n      </StyledInputBox>\n\n      {handleInfoMessage()}\n\n      <AuthFormVisibilityButton\n        passwordType={passwordType}\n        togglePassword={togglePasswordPlaceholder}\n      />\n    </div>\n  );\n};\n\nexport default PasswordInput;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledAuthNav = styled(Link)`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  color: var(--primary-font-color);\n  text-decoration: underline;\n  transition: all var(--transition-dur-func);\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  &:hover {\n    scale: 1.01;\n  }\n`;\n","import { StyledAuthNav } from './AuthNav.styled';\n\nconst AuthNav = ({ authNavLink, authNavText }) => {\n  return <StyledAuthNav to={authNavLink}>{authNavText}</StyledAuthNav>;\n};\n\nexport default AuthNav;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledFormContainer = styled.div`\n  margin-bottom: 18px;\n\n  background-color: var(--main-background-color);\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  border-radius: 30px;\n\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  padding: 32px 28px;\n\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    padding: 44px 50px;\n  }\n`;\n\nexport const StyledTitle = styled.p`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  color: var(--primary-font-color);\n  margin-bottom: ${props => {\n    switch (props.status) {\n      case 'signup':\n        return '18px';\n      case 'signin':\n        return '40px';\n      default:\n        return;\n    }\n  }};\n\n  @media screen and (min-width: 768px) {\n    font-size: 28px;\n    line-height: 1.07;\n\n    margin-bottom: ${props => {\n      switch (props.status) {\n        case 'signup':\n          return '32px';\n        case 'signin':\n          return '50px';\n        default:\n          return;\n      }\n    }};\n  }\n`;\n\nexport const StyledInputsContainer = styled.div`\n  margin-bottom: 28px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 50px;\n    gap: 24px;\n  }\n`;\n","import styled from 'styled-components';\n\nimport img1 from '../../../images/authFormImg/formBackgroundMobile.jpeg';\nimport img2 from '../../../images/authFormImg/formBackgroundMobile@2x.jpeg';\nimport img3 from '../../../images/authFormImg/formBackgroundTab.jpeg';\nimport img4 from '../../../images/authFormImg/formBackgroundTab@2x.jpeg';\nimport img5 from '../../../images/authFormImg/formBackgroundDesktop.jpeg';\nimport img6 from '../../../images/authFormImg/formBackgroundDesktop@2x.jpeg';\nimport img7 from '../../../images/authFormImg/signMobile.png';\nimport img8 from '../../../images/authFormImg/signMobile@2x.png';\nimport img9 from '../../../images/authFormImg/signTab.png';\nimport img10 from '../../../images/authFormImg/signTab@2x.png';\nimport img11 from '../../../images/authFormImg/signDesktop.png';\nimport img12 from '../../../images/authFormImg/signDesktop@2x.png';\n\nexport const StyledAuthPageContainer = styled.div`\n  min-height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n\n  background-image: url(${img7}), url(${img1});\n  background-size: 285px 250px, 100% 560px;\n  background-position: top 85px left 50%, bottom;\n  background-repeat: no-repeat;\n\n  @media screen and (min-device-pixel-ratio: 2) and (max-width: 767px),\n    screen and (min-resolution: 192dpi) and (max-width: 767px),\n    screen and (min-resolution: 2dppx) and (max-width: 767px) {\n    background-image: url(${img8}), url(${img2});\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${img9}), url(${img3});\n    background-size: 409px 359px, 100% 700px;\n    background-position: top 100px left 50%, bottom;\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 768px),\n    screen and (min-resolution: 192dpi) and (min-width: 768px),\n    screen and (min-resolution: 2dppx) and (min-width: 768px) {\n    background-image: url(${img10}), url(${img4});\n  }\n\n  @media screen and (max-width: 1439px) {\n    justify-content: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    background-image: url(${img11}), url(${img5});\n    background-size: 532px 468px, 100% 350px;\n    align-items: center;\n    justify-content: end;\n    background-position: top 160px left 113px, bottom;\n  }\n\n  @media screen and (min-device-pixel-ratio: 2) and (min-width: 1440px),\n    screen and (min-resolution: 192dpi) and (min-width: 1440px),\n    screen and (min-resolution: 2dppx) and (min-width: 1440px) {\n    background-image: url(${img12}), url(${img6});\n  }\n`;\n\nexport const StyledAuthPageContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (max-width: 767px) {\n    justify-content: flex-end;\n    padding-top: 305px;\n    padding-bottom: ${props => {\n      switch (props.status) {\n        case 'register':\n          return '118px';\n        case 'signin':\n          return '153px';\n        default:\n          return;\n      }\n    }};\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    padding-top: 443px;\n    padding-bottom: ${props => {\n      switch (props.status) {\n        case 'register':\n          return '59px';\n        case 'signin':\n          return '120px';\n        default:\n          return;\n      }\n    }};\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-top: 122px;\n    padding-right: 180px;\n    background-size: 100% 325px;\n    padding-bottom: ${props => {\n      switch (props.status) {\n        case 'register':\n          return '122px';\n        case 'signin':\n          return '153px';\n        default:\n          return;\n      }\n    }};\n  }\n`;\n","import { StyledSubmitButton } from './SubmitButton.styled';\n\nconst SubmitButton = ({ text }) => {\n  return <StyledSubmitButton type=\"submit\">{text}</StyledSubmitButton>;\n};\n\nexport default SubmitButton;\n"],"names":["StyledAuthFormVisibilityBtnContainer","styled","StyledButton","passwordType","togglePassword","type","onClick","width","height","href","icons","errors","className","touched","onChange","onFocus","onBlur","useState","message","setMessage","hovered","setHovered","setPasswordType","error","password","warning","success","neutral","placeholderText","name","placeholder","autoComplete","onMouseEnter","onMouseLeave","event","passwordValue","target","value","test","length","status","StyledAuthNav","Link","authNavLink","authNavText","to","StyledFormContainer","StyledForm","Form","StyledTitle","props","StyledInputsContainer","StyledAuthPageContainer","img7","img8","img9","img10","img11","img12","img6","StyledAuthPageContentContainer","text"],"sourceRoot":""}