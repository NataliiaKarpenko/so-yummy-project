{"version":3,"file":"static/js/606.ae17d219.chunk.js","mappings":"0PAoDA,EAxCsB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,GAAsCC,EAAAA,EAAAA,UAASC,OAAOC,YAAtD,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,SAASC,IACPF,EAAeH,OAAOC,WACvB,CAED,OADAD,OAAOM,iBAAiB,SAAUD,GAC3B,kBAAML,OAAOO,oBAAoB,SAAUF,EAA3C,CACR,GAAE,CAACH,IAEJ,IAAMM,EAAiB,SAAAC,GACrBZ,GAASa,EAAAA,EAAAA,IAAoBD,IAAKE,MAAK,YACrCC,EAAAA,EAAAA,MACAf,GAASgB,EAAAA,EAAAA,IAAcjB,GACxB,GACF,EAED,OACE,+BACGD,QADH,IACGA,OADH,EACGA,EAAamB,KAAI,YAAgD,IAA7CL,EAA4C,EAA5CA,GAAIM,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpD,OACE,SAAC,EAAAC,SAAD,WACE,SAACC,EAAA,EAAD,CACEX,GAAIA,EACJM,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,KAAMA,EACNV,eAAgBA,KAPLC,EAWlB,KAGN,E,4DClDYY,EAAkB,SAAAC,GAAK,OAClCA,EAAMC,WAAWA,WAAWC,cADM,EAEvBC,EAAuB,SAAAH,GAAK,OAAIA,EAAMC,WAAWA,WAAWG,KAAhC,EAC5BC,EAAsB,SAAAL,GAAK,OAAIA,EAAMC,WAAWA,WAAW3B,IAAhC,EAC3BgC,EAAgB,SAAAN,GAAK,OAAIA,EAAMC,WAAWM,SAArB,ECmElC,EAnD+B,WAC7B,IAAMhC,GAAWC,EAAAA,EAAAA,MAEXgC,GAAgBC,EAAAA,EAAAA,IAAYV,GAC5BW,GAAiBD,EAAAA,EAAAA,IAAYN,GAC7BQ,GAAcF,EAAAA,EAAAA,IAAYJ,GAChC,GAAwB5B,EAAAA,EAAAA,UAAS,GAAjC,eAAOH,EAAP,KAAasC,EAAb,KACML,GAAYE,EAAAA,EAAAA,IAAYH,IAE9BxB,EAAAA,EAAAA,YAAU,WACRP,GAASgB,EAAAA,EAAAA,IAAcjB,GACxB,GAAE,CAACC,EAAUD,IAEd,IAAMuC,EAAaC,KAAKC,KAAKL,EAAiB,IAE9C5B,EAAAA,EAAAA,YAAU,WACJ6B,EAAc,GAA+B,KAAb,OAAbH,QAAa,IAAbA,OAAA,EAAAA,EAAeQ,SACpCJ,EAAQD,EAAc,EAEzB,GAAE,CAACH,EAAelC,EAAMqC,IAOzB,OACE,0BACE,UAACM,EAAA,EAAD,CAAgB3C,MAAM,EAAtB,UACGiC,IAAa,SAACW,EAAA,EAAD,KACd,UAAC,KAAD,YACE,SAACC,EAAA,EAAD,CAAO1B,MAAM,cAEXc,GAAuC,KAAb,OAAbC,QAAa,IAAbA,OAAA,EAAAA,EAAeQ,SAAgC,IAAhBL,GAG5C,SAAC,EAAD,CAAetC,YAAamC,EAAelC,KAAMA,KAFjD,SAAC8C,EAAA,EAAD,CAAgBC,KAAK,sCAItBR,EAAa,IACZ,SAAC,IAAD,CACEvC,KAAMA,EACNuC,WAAYA,EACZS,SArBa,SAAAC,GACvBX,EAAQW,IACRC,EAAAA,EAAAA,IACD,WAyBF,EC3DD,EARsB,WACpB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["modules/MyPecipesPageComponent/MyRecipesList/MyRecipesList.jsx","redux/reduxOwnRecipes/ownRecipesSelectors.js","modules/MyPecipesPageComponent/MyRecipesPageComponent.jsx","pages/MyRecipesPage.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { removeFromMyRecipes } from 'shared/Utils/notifications';\nimport MyRecipesItem from 'shared/components/SharedPageComponents/MyRecipeItem/MyRecipesItem';\nimport {\n  deleteOwnRecipeById,\n  getOwnRecipes,\n} from 'redux/reduxOwnRecipes/ownRecipesOperations';\nimport { Fragment } from 'react';\n\nconst MyRecipesList = ({ recipesList, page }) => {\n  const dispatch = useDispatch();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowWidth(window.innerWidth);\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [windowWidth]);\n\n  const onHandleDelete = id => {\n    dispatch(deleteOwnRecipeById(id)).then(() => {\n      removeFromMyRecipes();\n      dispatch(getOwnRecipes(page));\n    });\n  };\n\n  return (\n    <ul>\n      {recipesList?.map(({ id, title, preview, description, time }) => {\n        return (\n          <Fragment key={id}>\n            <MyRecipesItem\n              id={id}\n              title={title}\n              preview={preview}\n              description={description}\n              time={time}\n              onHandleDelete={onHandleDelete}\n            />\n          </Fragment>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MyRecipesList;\n","export const selectMyRecipes = state =>\n  state.ownRecipes.ownRecipes.ownRecipesList;\nexport const selectMyRecipesTotal = state => state.ownRecipes.ownRecipes.total;\nexport const selectMyRecipesPage = state => state.ownRecipes.ownRecipes.page;\nexport const selectLoading = state => state.ownRecipes.isLoading;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getOwnRecipes } from 'redux/reduxOwnRecipes/ownRecipesOperations';\nimport { scrollToTop } from 'shared/Utils/scrollToTop';\nimport MyRecipesList from './MyRecipesList/MyRecipesList';\nimport PageBackground from 'shared/components/SharedLayoutLoggedIn/PageBackground/PageBackground';\nimport { StyledContainer } from 'shared/components/Container/Container.styled';\nimport Title from 'shared/components/SharedPageComponents/Title/Title';\nimport NoInfoSupplied from 'shared/components/SharedPageComponents/NoInfoSupplied/NoInfoSupplied';\nimport BasicPagination from 'shared/components/SharedPageComponents/Pagination/Pagination';\nimport Loader from 'shared/components/Loader/Loader';\nimport {\n  selectLoading,\n  selectMyRecipes,\n  selectMyRecipesPage,\n  selectMyRecipesTotal,\n} from 'redux/reduxOwnRecipes/ownRecipesSelectors';\n\nconst MyRecipesPageComponent = () => {\n  const dispatch = useDispatch();\n\n  const myRecipesList = useSelector(selectMyRecipes);\n  const totalMyRecipes = useSelector(selectMyRecipesTotal);\n  const currentPage = useSelector(selectMyRecipesPage);\n  const [page, setPage] = useState(1);\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(getOwnRecipes(page));\n  }, [dispatch, page]);\n\n  const totalPages = Math.ceil(totalMyRecipes / 4);\n\n  useEffect(() => {\n    if (currentPage > 1 && myRecipesList?.length === 0) {\n      setPage(currentPage - 1);\n    }\n  }, [myRecipesList, page, currentPage]);\n\n  const handlePageChange = value => {\n    setPage(value);\n    scrollToTop();\n  };\n\n  return (\n    <div>\n      <PageBackground page={true}>\n        {isLoading && <Loader />}\n        <StyledContainer>\n          <Title title=\"Favorites\" />\n\n          {!isLoading && myRecipesList?.length === 0 && currentPage === 1 ? (\n            <NoInfoSupplied text=\"You haven't added a recipe yet...\" />\n          ) : (\n            <MyRecipesList recipesList={myRecipesList} page={page} />\n          )}\n          {totalPages > 1 && (\n            <BasicPagination\n              page={page}\n              totalPages={totalPages}\n              onChange={handlePageChange}\n            />\n          )}\n        </StyledContainer>\n      </PageBackground>\n    </div>\n  );\n};\n\nexport default MyRecipesPageComponent;\n","import MyRecipesPageComponent from 'modules/MyPecipesPageComponent/MyRecipesPageComponent';\n\nconst MyRecipesPage = () => {\n  return (\n    <div>\n      <MyRecipesPageComponent />\n    </div>\n  );\n};\n\nexport default MyRecipesPage;\n"],"names":["recipesList","page","dispatch","useDispatch","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","onHandleDelete","id","deleteOwnRecipeById","then","removeFromMyRecipes","getOwnRecipes","map","title","preview","description","time","Fragment","MyRecipesItem","selectMyRecipes","state","ownRecipes","ownRecipesList","selectMyRecipesTotal","total","selectMyRecipesPage","selectLoading","isLoading","myRecipesList","useSelector","totalMyRecipes","currentPage","setPage","totalPages","Math","ceil","length","PageBackground","Loader","Title","NoInfoSupplied","text","onChange","value","scrollToTop"],"sourceRoot":""}