{"version":3,"file":"static/js/913.b2c2e365.chunk.js","mappings":"6QAyCA,EAhC4B,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACpCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiB,SAAAC,GACrBH,GAASI,EAAAA,EAAAA,GAAgBD,IAAKE,MAAK,YACjCC,EAAAA,EAAAA,MACAN,GAASO,EAAAA,EAAAA,IAAmBR,GAC7B,GACF,EAED,OACE,wBACGD,EAAYU,KACX,YAA0D,IAAvDL,EAAsD,EAAtDA,GAAIM,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAClC,OADuD,EAAfC,WAGpC,SAACC,EAAA,EAAD,CACEX,GAAIA,EACJM,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,KAAMA,EACNV,eAAgBA,GAIvB,KAIR,E,wCC2BD,EAhD8B,WAC5B,IAAMa,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAuBF,EAAAA,EAAAA,IAAYG,EAAAA,IACnCC,GAAcJ,EAAAA,EAAAA,IAAYK,EAAAA,IAChC,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOvB,EAAP,KAAawB,EAAb,KAEMvB,GAAWC,EAAAA,EAAAA,MACXuB,EAAaC,KAAKC,KAAKR,EAAuB,IAEpDS,EAAAA,EAAAA,YAAU,WACJP,EAAc,GAAgC,IAA3BL,EAAgBa,QACrCL,EAAQH,EAAc,EAEzB,GAAE,CAACL,EAAiBhB,EAAMqB,KAE3BO,EAAAA,EAAAA,YAAU,WACR3B,GAASO,EAAAA,EAAAA,IAAmBR,GAC7B,GAAE,CAACC,EAAUD,IAOd,OACE,+BACE,SAAC8B,EAAA,EAAD,CAAgB9B,MAAM,EAAtB,UACE,UAAC,KAAD,YACE,SAAC+B,EAAA,EAAD,CAAOrB,MAAM,cAEe,IAA3BM,EAAgBa,QAAgC,IAAhBR,GAC/B,SAACW,EAAA,EAAD,CAAgBC,KAAK,0DAErB,SAAC,EAAD,CAAqBlC,YAAaiB,EAAiBhB,KAAMA,IAE1DyB,EAAa,IACZ,SAAC,IAAD,CACEzB,KAAMA,EACNyB,WAAYA,EACZS,SApBa,SAAAC,GACvBX,EAAQW,IACRC,EAAAA,EAAAA,IACD,UAwBF,ECtDD,EARqB,WACnB,OACE,0BACE,SAAC,EAAD,KAGL,C,wSCRM,IAAMC,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,SAAlB,EAErBC,EAAwB,SAAAH,GAAK,OAAIA,EAAMC,QAAQG,eAAlB,EAC7BC,EAAmB,SAAAL,GAAK,OAAIA,EAAMC,QAAQK,cAAlB,EACxBC,EAAmB,SAAAP,GAAK,OAAIA,EAAMC,QAAQO,UAAlB,EACxB5B,EAAwB,SAAAoB,GAAK,OACxCA,EAAMC,QAAQvB,gBAAgB+B,mBADU,EAE7B3B,EAA6B,SAAAkB,GAAK,OAC7CA,EAAMC,QAAQvB,gBAAgBgC,KADe,EAElC1B,EAA4B,SAAAgB,GAAK,OAC5CA,EAAMC,QAAQvB,gBAAgBhB,IADc,EAEjCiD,EAAuB,SAAAX,GAAK,OACvCA,EAAMC,QAAQW,eAAeC,kBADU,EAE5BC,EAA4B,SAAAd,GAAK,OAC5CA,EAAMC,QAAQW,eAAeF,KADe,EAEjCK,EAAoB,SAAAf,GAAK,OAAIA,EAAMC,QAAQe,eAAlB,EAEzBC,EAAuB,SAAAjB,GAAK,OAAIA,EAAMC,QAAQiB,kBAAlB,C","sources":["modules/FavoritePageComponent/FavoriteRecipesList/FavoriteRecipesList.jsx","modules/FavoritePageComponent/FavoritePageComponent.jsx","pages/FavoritePage.jsx","redux/reduxRecipes/recipesSelectors.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\n\nimport { removeFromFavorite } from 'shared/Utils/notifications';\nimport MyRecipesItem from 'shared/components/SharedPageComponents/MyRecipeItem/MyRecipesItem';\nimport {\n  getFavoriteRecipes,\n  toggleFavourite,\n} from 'redux/reduxRecipes/recipesOperations';\n\nconst FavoriteRecipesList = ({ recipesList, page }) => {\n  const dispatch = useDispatch();\n\n  const onHandleDelete = id => {\n    dispatch(toggleFavourite(id)).then(() => {\n      removeFromFavorite();\n      dispatch(getFavoriteRecipes(page));\n    });\n  };\n\n  return (\n    <ul>\n      {recipesList.map(\n        ({ id, title, preview, description, time, favorite }) => {\n          return (\n            favorite && (\n              <MyRecipesItem\n                id={id}\n                title={title}\n                preview={preview}\n                description={description}\n                time={time}\n                onHandleDelete={onHandleDelete}\n              />\n            )\n          );\n        }\n      )}\n    </ul>\n  );\n};\n\nexport default FavoriteRecipesList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState, useEffect } from 'react';\n\nimport { StyledContainer } from 'shared/components/Container/Container.styled';\nimport PageBackground from 'shared/components/SharedLayoutLoggedIn/PageBackground/PageBackground';\nimport Title from 'shared/components/SharedPageComponents/Title/Title';\nimport FavoriteRecipesList from './FavoriteRecipesList/FavoriteRecipesList';\nimport NoInfoSupplied from 'shared/components/SharedPageComponents/NoInfoSupplied/NoInfoSupplied';\nimport { scrollToTop } from 'shared/Utils/scrollToTop';\nimport BasicPagination from 'shared/components/SharedPageComponents/Pagination/Pagination';\nimport { getFavoriteRecipes } from 'redux/reduxRecipes/recipesOperations';\n\nimport {\n  selectFavoriteRecipes,\n  selectFavoriteRecipesPage,\n  selectTotalFavoriteRecipes,\n} from 'redux/reduxRecipes/recipesSelectors';\n\nconst FavoritePageComponent = () => {\n  const favoriteRecipes = useSelector(selectFavoriteRecipes);\n  const totalFavoriteRecipes = useSelector(selectTotalFavoriteRecipes);\n  const currentPage = useSelector(selectFavoriteRecipesPage);\n  const [page, setPage] = useState(1);\n\n  const dispatch = useDispatch();\n  const totalPages = Math.ceil(totalFavoriteRecipes / 4);\n\n  useEffect(() => {\n    if (currentPage > 1 && favoriteRecipes.length === 0) {\n      setPage(currentPage - 1);\n    }\n  }, [favoriteRecipes, page, currentPage]);\n\n  useEffect(() => {\n    dispatch(getFavoriteRecipes(page));\n  }, [dispatch, page]);\n\n  const handlePageChange = value => {\n    setPage(value);\n    scrollToTop();\n  };\n\n  return (\n    <>\n      <PageBackground page={true}>\n        <StyledContainer>\n          <Title title=\"Favorites\" />\n\n          {favoriteRecipes.length === 0 && currentPage === 1 ? (\n            <NoInfoSupplied text=\"You haven't added a recipe to your favorites  yet...\" />\n          ) : (\n            <FavoriteRecipesList recipesList={favoriteRecipes} page={page} />\n          )}\n          {totalPages > 1 && (\n            <BasicPagination\n              page={page}\n              totalPages={totalPages}\n              onChange={handlePageChange}\n            />\n          )}\n        </StyledContainer>\n      </PageBackground>\n    </>\n  );\n};\n\nexport default FavoritePageComponent;\n","import FavoritePageComponent from 'modules/FavoritePageComponent/FavoritePageComponent';\n\nconst FavoritePage = () => {\n  return (\n    <div>\n      <FavoritePageComponent />\n    </div>\n  );\n};\n\nexport default FavoritePage;\n","export const selectLoading = state => state.recipes.isLoading;\n\nexport const selectRecipesMainPage = state => state.recipes.recipesMainPage;\nexport const selectCategories = state => state.recipes.categoriesList;\nexport const selectRecipeById = state => state.recipes.recipeById;\nexport const selectFavoriteRecipes = state =>\n  state.recipes.favoriteRecipes.favoriteRecipesList;\nexport const selectTotalFavoriteRecipes = state =>\n  state.recipes.favoriteRecipes.total;\nexport const selectFavoriteRecipesPage = state =>\n  state.recipes.favoriteRecipes.page;\nexport const selectRecipesByQuery = state =>\n  state.recipes.recipesByQuery.recipesByQueryList;\nexport const selectTotalRecipesByQuery = state =>\n  state.recipes.recipesByQuery.total;\nexport const selectIngredients = state => state.recipes.ingredientsList;\nexport const selectFilterIngredientsValue = state => state.filter.value;\nexport const selectPopularRecipes = state => state.recipes.popularRecipesList;\n"],"names":["recipesList","page","dispatch","useDispatch","onHandleDelete","id","toggleFavourite","then","removeFromFavorite","getFavoriteRecipes","map","title","preview","description","time","favorite","MyRecipesItem","favoriteRecipes","useSelector","selectFavoriteRecipes","totalFavoriteRecipes","selectTotalFavoriteRecipes","currentPage","selectFavoriteRecipesPage","useState","setPage","totalPages","Math","ceil","useEffect","length","PageBackground","Title","NoInfoSupplied","text","onChange","value","scrollToTop","selectLoading","state","recipes","isLoading","selectRecipesMainPage","recipesMainPage","selectCategories","categoriesList","selectRecipeById","recipeById","favoriteRecipesList","total","selectRecipesByQuery","recipesByQuery","recipesByQueryList","selectTotalRecipesByQuery","selectIngredients","ingredientsList","selectPopularRecipes","popularRecipesList"],"sourceRoot":""}